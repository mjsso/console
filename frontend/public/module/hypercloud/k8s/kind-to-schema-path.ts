export const kindToSchemaPath = new Map([
  ['CustomResourceDefinition', { directory: 'management', file: 'CustomResourceDefinition.json' }],
  ['LimitRange', { directory: 'management', file: 'LimitRange.json' }],
  ['Namespace', { directory: 'management', file: 'Namespace.json' }],
  ['Node', { directory: 'management', file: 'Node.json' }],
  ['ResourceQuota', { directory: 'management', file: 'ResourceQuota.json' }],
  ['Role', { directory: 'management', file: 'Role.json' }],
  ['ServiceAccount', { directory: 'management', file: 'ServiceAccount.json' }],
  ['Ingress', { directory: 'network', file: 'Ingress.json' }],
  ['NetworkPolicy', { directory: 'network', file: 'NetworkPolicy.json' }],
  ['Service', { directory: 'network', file: 'Service.json' }],
  ['PersistentVolume', { directory: 'storage', file: 'PersistentVolume.json' }],
  ['PersistentVolumeClaim', { directory: 'storage', file: 'PersistentVolumeClaim.json' }],
  ['StorageClass', { directory: 'storage', file: 'StorageClass.json' }],
  ['ConfigMap', { directory: 'workload', file: 'ConfigMap.json' }],
  ['CronJob', { directory: 'workload', file: 'CronJob.json' }],
  ['DaemonSet', { directory: 'workload', file: 'DaemonSet.json' }],
  ['Deployment', { directory: 'workload', file: 'Deployment.json' }],
  ['HorizontalPodAutoscaler', { directory: 'workload', file: 'HorizontalPodAutoscaler.json' }],
  ['Job', { directory: 'workload', file: 'Job.json' }],
  ['Pod', { directory: 'workload', file: 'Pod.json' }],
  ['PodSecurityPolicy', { directory: 'workload', file: 'PodSecurityPolicy.json' }],
  ['ReplicaSet', { directory: 'workload', file: 'ReplicaSet.json' }],
  ['StatefulSet', { directory: 'workload', file: 'StatefulSet.json' }],
  ['ClusterRole', { directory: 'management', file: 'ClusterRole.json' }],
]);
